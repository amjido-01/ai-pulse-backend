// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "postgresql"
    url       = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}


model User {
  id        String     @id @default(cuid())
  email     String  @unique
  password  String
  name      String
  frequency String   @default("weekly")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  refreshToken String?
  interest Interest[]
  notifications UserNotifications[]
  registeredAt   DateTime           @default(now())
}


model Interest {
  id       Int    @id @default(autoincrement())
  interest String
  user     User   @relation(fields: [userId], references: [id])
  userId   String

  @@unique([userId, interest])
}

model Aiproducts {
  id    String @unique
  name  String
  tagline String
  createdAt DateTime
  website    String
  url    String
   category  String @default("uncategorized")
   notifications UserNotifications[]
}

model UserNotifications {
  id               Int              @id @default(autoincrement())
  userId           String           // Foreign key to User table
  productId        String           // Foreign key to Aiproducts table
  productName       String
  website           String
  notifiedAt       DateTime?        // Null if notification has not been sent
  notificationTime DateTime         // Scheduled time to notify the user
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  sent           Boolean  @default(false) // Add this line

  // Relations
  user             User             @relation(fields: [userId], references: [id])
  product          Aiproducts       @relation(fields: [productId], references: [id])

  @@unique([userId, productId]) // Ensure a user is notified about a product only once
}
  